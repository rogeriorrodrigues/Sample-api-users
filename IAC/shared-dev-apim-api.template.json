{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "ApimServiceName": {
            "type": "string"
        },
        "Description": {
            "type": "string"
        },
        "Version": {
            "type": "string"
        },
        "DisplayName": {
            "type": "string"
        },
        "ServiceUrl": {
            "type": "string"
        },
        "Path": {
            "type": "string"
        },
        "ApplicationClientID": {
            "type": "string"
        }
    },
    "resources": [
        {
            "properties": {
                "description": "[parameters('Description')]",
                "authenticationSettings": {
                    "subscriptionKeyRequired": false
                },
                "subscriptionKeyParameterNames": {
                    "header": "Ocp-Apim-Subscription-Key",
                    "query": "subscription-key"
                },
                "apiRevision": "[parameters('Version')]",
                "isCurrent": true,
                "subscriptionRequired": true,
                "displayName": "[parameters('DisplayName')]",
                "serviceUrl": "[parameters('ServiceUrl')]",
                "path": "[parameters('Path')]",
                "protocols": [
                    "https"
                ]
            },
            "name": "[concat(parameters('ApimServiceName'), '/', parameters('Path'))]",
            "type": "Microsoft.ApiManagement/service/apis",
            "apiVersion": "2021-01-01-preview",
            "dependsOn": []
        },
        {
          "properties": {
            "value": "[concat('<!--\n    IMPORTANT:\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\n    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.\n    - To remove a policy, delete the corresponding policy statement from the policy document.\n    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\n    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\n    - Policies are applied in the order of their appearance, from the top down.\n    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.\n-->\r\n<policies>\r\n\t<inbound>\r\n\t\t<base />\r\n\t\t<set-header name=\"Content-Type\" exists-action=\"override\">\r\n\t\t\t<value>application/json</value>\r\n\t\t</set-header>\r\n\t\t\r\n\t</inbound>\r\n\t<backend>\r\n\t\t<base />\r\n\t</backend>\r\n\t<outbound>\r\n\t\t<base />\r\n\t</outbound>\r\n\t<on-error>\r\n\t\t<base />\r\n\t</on-error>\r\n</policies>')]",
            "format": "rawxml"
          },
            "name": "[concat(parameters('ApimServiceName'), '/', parameters('Path'),'/policy')]",
            "type": "Microsoft.ApiManagement/service/apis/policies",
            "apiVersion": "2021-01-01-preview",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), parameters('Path'))]"
            ]
        }
    ]
}